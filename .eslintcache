[{"/Users/annasaponjyan/Documents/GitHub/to-do-app/src/index.js":"1","/Users/annasaponjyan/Documents/GitHub/to-do-app/src/App.js":"2","/Users/annasaponjyan/Documents/GitHub/to-do-app/src/components/Header.js":"3","/Users/annasaponjyan/Documents/GitHub/to-do-app/src/components/Footer.js":"4","/Users/annasaponjyan/Documents/GitHub/to-do-app/src/components/TodoItem.js":"5","/Users/annasaponjyan/Documents/GitHub/to-do-app/src/components/TodoList.js":"6","/Users/annasaponjyan/Documents/GitHub/to-do-app/src/components/TodoForm.js":"7","/Users/annasaponjyan/Documents/GitHub/to-do-app/src/components/TodoActions.js":"8"},{"size":145,"mtime":1613787962521,"results":"9","hashOfConfig":"10"},{"size":5122,"mtime":1614267662486,"results":"11","hashOfConfig":"10"},{"size":504,"mtime":1614218547581,"results":"12","hashOfConfig":"10"},{"size":428,"mtime":1614229930956,"results":"13","hashOfConfig":"10"},{"size":971,"mtime":1614222377293,"results":"14","hashOfConfig":"10"},{"size":508,"mtime":1614049179721,"results":"15","hashOfConfig":"10"},{"size":866,"mtime":1614049352277,"results":"16","hashOfConfig":"10"},{"size":1161,"mtime":1614277103608,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"v9m7k0",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/annasaponjyan/Documents/GitHub/to-do-app/src/index.js",[],["36","37"],"/Users/annasaponjyan/Documents/GitHub/to-do-app/src/App.js",["38"],"import React, { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport TodoForm from './components/TodoForm'\nimport TodoList from './components/TodoList'\nimport TodoActions from './components/TodoActions'\nimport './App.scss'\n\nfunction App() {\n    let n\n    // STATES\n    // create a state for inputs\n    const [inputText, setInputText] = useState('')\n    // create a state to store all todos. We gonna have an array of objects ([]). And we gonna add inputText to this todos array by submit the form in the TodoForm component\n    const [todos, setTodos] = useState([])\n    // create a state for the status of the filter\n    const [status, setStatus] = useState('all')\n    // create a state to store filtered todos. We need to have this because if we use filter 'completed' or 'active' which remove the todos that are not filtered, then we need to store them somewhere, and it is the initial 'todos' state ( const [todos, setTodos] = useState([]))\n    const [filteredTodos, setFilteredTodos] = useState([])\n    // create state for the active items, i.e. items left to complete\n    const [itemsLeftToComplete, setItemsLeftToComplete] = useState(n)\n    // create state for color theme\n    const [theme, setTheme] = useState('light')\n\n    // USE EFFECT\n    // run only once when the app first loads\n    useEffect(() => {\n        getLocalTodos()\n        getThemeFromLocalStorage()\n        }, []\n    )\n    // run once the app first loads and when we add input items (todos) and use filter (status)\n    useEffect(() => {\n        handleFilter()\n        saveToLocalStorage()\n        saveThemeToLocalStorage()\n        getActiveTodos()\n        }, [todos, status, theme]\n    )\n\n    // FUNCTIONS AND EVENTS\n    // handle todos filter - all, active, completed. The default filter status is 'all'. \n    function handleFilter() {\n        switch(status) {\n            case 'completed':\n                setFilteredTodos(todos.filter(todo => todo.completed === true))\n                break\n            case 'active':\n                setFilteredTodos(todos.filter(todo => todo.completed === false))\n                break\n            default:\n                setFilteredTodos(todos)\n                break            \n        }\n    }\n    // get the number of active todos\n    function getActiveTodos() {\n        setItemsLeftToComplete(todos.filter(todo => todo.completed === false).length)\n    }\n\n    // SAVE TO LOCAL STORAGE\n    // We need to store our todos list in a local storage in order it to keep it in a browser after refreshing the app.\n    // In order to do this we need 1) to store the data in localStorage, 2) to parse the localStorage and load it in uesEffect ones the app first loads\n    // This function store the data to the localStorage. And we need this function to run in useEffect, so that data stores in local storage ones the app loads and ones the 'todos' and 'status' change.\n    function saveToLocalStorage() {\n        localStorage.setItem('todos', JSON.stringify(todos))\n    }\n\n    function saveThemeToLocalStorage() {\n        if (theme === 'light') {\n            localStorage.setItem('theme', JSON.stringify('light'))\n        } else if (theme === 'dark') {\n            localStorage.setItem('theme', JSON.stringify('dark'))\n        }\n    }\n\n    function getThemeFromLocalStorage() {\n        if (localStorage.getItem('theme') === null) {\n            localStorage.setItem('theme', JSON.stringify(''))\n        } else {\n            let themeLocal = JSON.parse(localStorage.getItem('theme'))\n            setTheme(themeLocal)\n        }  \n    }\n\n    // We need this function in order to load the data from the localStorage. And we should run this function in useEffect only ones the app loads, that's why we have to use one more useEffect\n    function getLocalTodos() {\n        // check if there are todos to store. If not - then just add an empty array\n        if (localStorage.getItem('todos') === null) {\n            localStorage.setItem('todos', JSON.stringify([]))\n        } else {\n            let todosLocal = JSON.parse(localStorage.getItem('todos'))\n            setTodos(todosLocal)\n        }\n    }\n\n    return (\n        <div className={`App App-theme-${theme}`}>\n            <Header \n                theme={theme}\n                setTheme={setTheme} \n            />\n            <div className=\"todo-body\">\n                <TodoForm \n                    todos={todos} \n                    setTodos={setTodos} \n                    inputText={inputText} \n                    setInputText={setInputText}\n                />\n                <TodoList \n                    todos={todos} \n                    setTodos={setTodos}\n                    filteredTodos={filteredTodos}\n                />\n                <TodoActions \n                    todos={todos} \n                    setTodos={setTodos}\n                    status={status}\n                    setStatus={setStatus} \n                    itemsLeftToComplete={itemsLeftToComplete} \n                />\n            </div>\n            <Footer />\n        </div>\n    )        \n}\n\nexport default App","/Users/annasaponjyan/Documents/GitHub/to-do-app/src/components/Header.js",[],"/Users/annasaponjyan/Documents/GitHub/to-do-app/src/components/Footer.js",[],"/Users/annasaponjyan/Documents/GitHub/to-do-app/src/components/TodoItem.js",[],"/Users/annasaponjyan/Documents/GitHub/to-do-app/src/components/TodoList.js",[],"/Users/annasaponjyan/Documents/GitHub/to-do-app/src/components/TodoForm.js",[],"/Users/annasaponjyan/Documents/GitHub/to-do-app/src/components/TodoActions.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":38,"column":12,"nodeType":"45","endLine":38,"endColumn":34,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getActiveTodos', 'handleFilter', 'saveThemeToLocalStorage', and 'saveToLocalStorage'. Either include them or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [todos, status, theme, handleFilter, saveToLocalStorage, saveThemeToLocalStorage, getActiveTodos]",{"range":"52","text":"53"},[1704,1726],"[todos, status, theme, handleFilter, saveToLocalStorage, saveThemeToLocalStorage, getActiveTodos]"]